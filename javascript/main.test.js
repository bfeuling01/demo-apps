const { test, expect } = require('@jest/globals')
const ops = require('./main.js')

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})

test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})
test('testing addition', () => {expect(ops.add(1,2)).toBe(3);})

test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})
test('testing multiplication', () => {expect(ops.multiply(2,3)).toBe(6);})

test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})
test('testing subtraction', () => {expect(ops.subtract(2,1)).toBe(1);})

test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})
test('testing division', () => {expect(ops.divide(6,2)).toBe(3);})

test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
test('testing modulo', () => {expect(ops.modulo(6,4)).toBe(2);})
